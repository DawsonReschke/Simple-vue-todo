{"remainingRequest":"/Users/dawson/workspace/fiveMinuteChal/nodejs/vue/C_Todo/client/node_modules/babel-loader/lib/index.js!/Users/dawson/workspace/fiveMinuteChal/nodejs/vue/C_Todo/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/dawson/workspace/fiveMinuteChal/nodejs/vue/C_Todo/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dawson/workspace/fiveMinuteChal/nodejs/vue/C_Todo/client/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/dawson/workspace/fiveMinuteChal/nodejs/vue/C_Todo/client/src/App.vue","mtime":1634345563068},{"path":"/Users/dawson/workspace/fiveMinuteChal/nodejs/vue/C_Todo/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dawson/workspace/fiveMinuteChal/nodejs/vue/C_Todo/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/dawson/workspace/fiveMinuteChal/nodejs/vue/C_Todo/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dawson/workspace/fiveMinuteChal/nodejs/vue/C_Todo/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9kYXdzb24vd29ya3NwYWNlL2ZpdmVNaW51dGVDaGFsL25vZGVqcy92dWUvQ19Ub2RvL2NsaWVudC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vIGltcG9ydCBOZXdUb2RvIGZyb20gIi4vY29tcG9uZW50cy9uZXd0b2RvLnZ1ZSIKaW1wb3J0IENyZWF0ZVRvZG8gZnJvbSAiLi9jb21wb25lbnRzL2NyZWF0ZS10b2RvLnZ1ZSI7CmltcG9ydCBEaXNwbGF5VG9kbyBmcm9tICIuL2NvbXBvbmVudHMvZGlzcGxheS10b2RvLnZ1ZSI7CmltcG9ydCBDaGFuZ2VUb2RvIGZyb20gIi4vY29tcG9uZW50cy9jaGFuZ2UtdG9kby52dWUiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0FwcCcsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGFwaVVSTDogJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAzMC9hcGkvdjEnLAogICAgICBjYXRlZ29yaWVzOiBbXSwKICAgICAgaXNDaGFuZ2luZ1RvZG86IGZhbHNlLAogICAgICB0b2RvVG9DaGFuZ2U6IFtdLAogICAgICBsb2FkaW5nOiB0cnVlCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0RGF0YSgpOwogICAgY29uc29sZS5sb2coImNyZWF0ZWQgYXQiKTsKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIC8vIE5ld1RvZG8sCiAgICBDcmVhdGVUb2RvOiBDcmVhdGVUb2RvLAogICAgRGlzcGxheVRvZG86IERpc3BsYXlUb2RvLAogICAgQ2hhbmdlVG9kbzogQ2hhbmdlVG9kbwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0RGF0YTogZnVuY3Rpb24gZ2V0RGF0YSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdnZXR0aW5nIGRhdGEnKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goX3RoaXMuYXBpVVJMKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICBfdGhpcy5jYXRlZ29yaWVzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF90aGlzLmNhdGVnb3JpZXMpOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE0OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTE7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDEpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQudDApOwoKICAgICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAgICAgX3RoaXMubG9hZGluZyA9IGZhbHNlOyAvLyB0cnl7CiAgICAgICAgICAgICAgICAvLyAgICAgbGV0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godGhpcy5tYWluVVJMKTsKICAgICAgICAgICAgICAgIC8vICAgICB0aGlzLmNhdGVnb3JpZXMgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7CiAgICAgICAgICAgICAgICAvLyAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpOyAKICAgICAgICAgICAgICAgIC8vIH1jYXRjaChlcnJvcil7CiAgICAgICAgICAgICAgICAvLyAgICAgY29uc29sZS5sb2coZXJyb3IpOyAKICAgICAgICAgICAgICAgIC8vIH0gCgogICAgICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzEsIDExXV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBDVG9kb0hhbmRsZXI6IGZ1bmN0aW9uIENUb2RvSGFuZGxlcih0eXBlKSB7CiAgICAgIHN3aXRjaCAodHlwZSkgewogICAgICAgIGNhc2UgJ3JlbG9hZCc6CiAgICAgICAgICBzZXRUaW1lb3V0KHRoaXMuZ2V0RGF0YSwgMjUwKTsKICAgICAgICAgIHRoaXMucmVzZXRGb3JtKCk7CiAgICAgICAgICBicmVhazsKICAgICAgfQogICAgfSwKICAgIGNoYW5nZVRvZG9IYW5kbGVyOiBmdW5jdGlvbiBjaGFuZ2VUb2RvSGFuZGxlcih0eXBlLCB0b2RvLCBpZCkgewogICAgICBzd2l0Y2ggKHR5cGUpIHsKICAgICAgICBjYXNlICdzdWJtaXRDaGFuZ2VzJzoKICAgICAgICAgIGNvbnNvbGUubG9nKCJ0b2RvOiAiLCB0b2RvLCAiIGlkOiAiLCBpZCk7IC8vY3JlYXRlIHB1dCByZXF1ZXN0ICh0b2RvKTsgCgogICAgICAgICAgdGhpcy5pc0NoYW5naW5nVG9kbyA9IGZhbHNlOwogICAgICAgICAgdGhpcy50b2RvVG9DaGFuZ2UgPSBbXTsKICAgICAgICAgIC8qCiAgICAgICAgICBkYXRhIHRvIHNlbmQgOiB7CiAgICAgICAgICAgIGNhdGVnb3J5OiBzdHJpbmcsCiAgICAgICAgICAgIGxpc3Q6IFt7fSx7fV0KICAgICAgICAgIH0KICAgICAgICAgICovCgogICAgICAgICAgdGhpcy5YSFIodG9kbywgJ1BVVCcsICIiLmNvbmNhdCh0aGlzLmFwaVVSTCwgIi8iKS5jb25jYXQoaWQpKTsKICAgICAgICAgIHNldFRpbWVvdXQoMjUwKTsKICAgICAgICAgIHRoaXMuZ2V0RGF0YSgpOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgJ2NhbmNlbENoYW5nZXMnOgogICAgICAgICAgdGhpcy5yZXNldEZvcm0oKTsKICAgICAgICAgIGJyZWFrOwogICAgICB9CiAgICB9LAogICAgY2F0SGFuZGxlcjogZnVuY3Rpb24gY2F0SGFuZGxlcih0eXBlLCB0b2RvKSB7CiAgICAgIGNvbnNvbGUubG9nKCJjYXRIYW5kbGVyIik7IC8vaWYgY2hhbmdlIDogdG9kbyBpcyBub3cgYW4gaW50ZWdlcjogdGhlIHRvZG8gaW5kZXggcmF0aGVyCgogICAgICBzd2l0Y2ggKHR5cGUpIHsKICAgICAgICBjYXNlICdjb21wbGV0ZSc6CiAgICAgICAgICAvKmNyZWF0ZXMgYSBwdXQgcmVxdWVzdCB0byBzd2FwIGNvbXBsZXRlIHRvICFjb21wbGV0ZSovCiAgICAgICAgICBjb25zb2xlLmxvZyh0b2RvKTsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlICdkZWxldGUnOgogICAgICAgICAgLypjcmVhdGVzIGEgZGVsZXRlIHJlcXVlc3QgZm9yIHtfaWQgOiB0b2RvLmlkfSovCiAgICAgICAgICBjb25zb2xlLmxvZyh0b2RvKTsKICAgICAgICAgIHRoaXMuWEhSKHRvZG9bMV0sICdERUxFVEUnLCAiIi5jb25jYXQodGhpcy5hcGlVUkwsICIvIikuY29uY2F0KHRvZG9bMF0pKTsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlICdjaGFuZ2UnOgogICAgICAgICAgLypjaGFuZ2VzIHRoZSBjcmVhdGVUb2RvIHRvIGEgY2hhbmdlVG9kbyB3aXRoIHRvZG8gPSB0b2Rvc1t0b2RvXSovCiAgICAgICAgICB0aGlzLmlzQ2hhbmdpbmdUb2RvID0gdHJ1ZTsKICAgICAgICAgIHRoaXMudG9kb1RvQ2hhbmdlID0gdG9kbzsKICAgICAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7CiAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMudG9kb1RvQ2hhbmdlKTsKICAgICAgICAgIGJyZWFrOwogICAgICB9CiAgICB9LAogICAgZGVsZXRlVG9kbzogZnVuY3Rpb24gZGVsZXRlVG9kbyh0b2RvKSB7CiAgICAgIC8vbWFrZSBodHRwIHJlcXVlc3QgdG8gZGVsZXRlIHRvZG8gd2l0aCB7X2lkIDogdG9kby5pZH0KICAgICAgY29uc29sZS5sb2codG9kbyk7CiAgICB9LAogICAgY2hhbmdlVG9kbzogZnVuY3Rpb24gY2hhbmdlVG9kbyh0b2RvSW5kZXgpIHsKICAgICAgLy9tYWtlIGh0dHAgcHV0IHJlcXVlc3QgdG8gY2hhbmdlIHRvZG8gd2l0aCB7X2lkIDogdG9kby5pZH0gdG8gOiB7bmV3VG9kb30KICAgICAgdGhpcy52aWV3SW5kZXggPSB0b2RvSW5kZXg7CiAgICAgIHRoaXMuaXNDaGFuZ2luZ1RvZG8gPSB0cnVlOwogICAgfSwKICAgIHZpZXdUb2RvOiBmdW5jdGlvbiB2aWV3VG9kbyh0b2RvSW5kZXgpIHsKICAgICAgLy91cGRhdGUgbG9jYWwgdmFyaWFsYmUgInZpZXdpbmdJbmRleCIKICAgICAgLy93YWl0IGZvciBlbWl0IGZyb20gIm5ld3RvZG8iIHRvIGNsZWFyIHRoZXNlLi4KICAgICAgdGhpcy52aWV3SW5kZXggPSB0b2RvSW5kZXg7CiAgICB9LAogICAgY29tcGxldGVUb2RvOiBmdW5jdGlvbiBjb21wbGV0ZVRvZG8odG9kbykgewogICAgICAvL2NyZWF0ZXMgYSBwdXQgcmVxdWVzdCBzaW1wbHkgc2V0aW5nIHRoaXMgdG9kbyB0byBjb21wbGV0ZS9pbmNvbXBsZXRlIAogICAgICBjb25zb2xlLmxvZyh0b2RvKTsKICAgIH0sCiAgICBjbGVhclZpZXdJbmRleDogZnVuY3Rpb24gY2xlYXJWaWV3SW5kZXgoKSB7CiAgICAgIHRoaXMudmlld0luZGV4ID0gLTE7CiAgICAgIHRoaXMuaXNDaGFuZ2luZ1RvZG8gPSBmYWxzZTsKICAgIH0sCiAgICBYSFI6IGZ1bmN0aW9uIFhIUihkYXRhLCB0eXBlLCB1cmwpIHsKICAgICAgdmFyIHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpOwogICAgICB4aHIub3Blbih0eXBlLCB1cmwsIHRydWUpOwogICAgICB4aHIuc2V0UmVxdWVzdEhlYWRlcignQ29udGVudC1UeXBlJywgJ2FwcGxpY2F0aW9uL2pzb24nKTsKICAgICAgeGhyLnNlbmQoSlNPTi5zdHJpbmdpZnkoZGF0YSkpOwogICAgICBzZXRUaW1lb3V0KHRoaXMuZ2V0RGF0YSwgMjUwKTsKICAgICAgdGhpcy5yZXNldEZvcm0oKTsKICAgIH0sCiAgICByZXNldEZvcm06IGZ1bmN0aW9uIHJlc2V0Rm9ybSgpIHsKICAgICAgdGhpcy50b2RvVG9DaGFuZ2UgPSBbXTsKICAgICAgdGhpcy5pc0NoYW5naW5nVG9kbyA9IGZhbHNlOwogICAgfQogIH0KfTs="},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"app\">\n    <!-- <NewTodo :isChangingTodo=\"isChangingTodo\" :viewIndex=\"viewIndex\"/> -->\n    <div v-if=\"!loading && isChangingTodo\" class=\"change-todo\">\n    <ChangeTodo @changeTodoHandler=\"changeTodoHandler\" :todo=\"todoToChange\"/>\n    </div>\n    <div v-if=\"!isChangingTodo\" class=\"create-todo\">\n   <CreateTodo @CTodoHandler=\"CTodoHandler\" :categories=\"categories\"/>\n    </div>\n    <br>\n    <DisplayTodo @catHandler=\"catHandler\" :categories=\"categories\"/>\n    <!-- <img alt=\"Vue logo\" src=\"./assets/logo.png\"> -->\n  </div>\n</template>\n\n<script>\n  // import NewTodo from \"./components/newtodo.vue\"\n  import CreateTodo from \"./components/create-todo.vue\"\n  import DisplayTodo from \"./components/display-todo.vue\"\n  import ChangeTodo from \"./components/change-todo.vue\"\nexport default {\n  name: 'App',\n  data(){\n    return{\n      apiURL: 'http://localhost:3030/api/v1', \n      categories: [],\n      isChangingTodo: false,\n      todoToChange: [],\n      loading: true,\n    }\n  },\n  created(){\n    this.getData(); \n    console.log(\"created at\");\n  },\n  components: {\n    // NewTodo,\n    CreateTodo,\n    DisplayTodo,\n    ChangeTodo,\n  },\n  methods:{\n     async getData() { \n       console.log('getting data'); \n       try {\n         let response = await fetch(this.apiURL); \n         this.categories = await response.json(); \n         console.log(this.categories); \n       } catch (error) {\n         console.log(error);\n       }\n       this.loading = false; \n            // try{\n            //     let response = await fetch(this.mainURL);\n            //     this.categories = await response.json();\n            //     console.log(response); \n            // }catch(error){\n            //     console.log(error); \n            // } \n    },\n    CTodoHandler(type){\n      switch(type){\n        case('reload'):\n        setTimeout(this.getData,250); \n        this.resetForm();\n        break; \n      }\n    },\n    changeTodoHandler(type, todo,id){\n      switch(type){\n        case('submitChanges'):\n        console.log(\"todo: \",todo, \" id: \", id);\n          //create put request (todo); \n          this.isChangingTodo = false; \n          this.todoToChange = [];\n          /*\n          data to send : {\n            category: string,\n            list: [{},{}]\n          }\n          */\n         this.XHR(todo,'PUT',`${this.apiURL}/${id}`)\n          setTimeout(250); \n          this.getData(); \n        break;\n        case('cancelChanges'): \n          this.resetForm(); \n        break; \n      }\n    },\n    catHandler(type,todo){\n      console.log(\"catHandler\"); \n//if change : todo is now an integer: the todo index rather\n      switch(type){\n        case('complete'):/*creates a put request to swap complete to !complete*/ \n          console.log(todo);\n          break;\n        case('delete'):/*creates a delete request for {_id : todo.id}*/ \n        console.log(todo);\n          this.XHR(todo[1],'DELETE',`${this.apiURL}/${todo[0]}`)\n          break;\n        case('change'):/*changes the createTodo to a changeTodo with todo = todos[todo]*/ \n            this.isChangingTodo = true;\n            this.todoToChange = todo; \n            this.loading = true; \n            this.loading = false; \n            console.log(this.todoToChange);\n          break;\n        }\n    },\n    deleteTodo(todo){\n      //make http request to delete todo with {_id : todo.id}\n      console.log(todo); \n    },\n    changeTodo(todoIndex){\n      //make http put request to change todo with {_id : todo.id} to : {newTodo}\n      this.viewIndex = todoIndex; \n      this.isChangingTodo = true; \n    },\n    viewTodo(todoIndex){\n      //update local varialbe \"viewingIndex\"\n      //wait for emit from \"newtodo\" to clear these..\n      this.viewIndex = todoIndex; \n    },\n    completeTodo(todo){\n      //creates a put request simply seting this todo to complete/incomplete \n      console.log(todo);\n    },\n    clearViewIndex(){\n      this.viewIndex = -1; \n      this.isChangingTodo= false; \n    },\n    XHR(data, type, url){\n      var xhr = new XMLHttpRequest();\n      xhr.open(type,url, true);\n      xhr.setRequestHeader('Content-Type', 'application/json');\n      xhr.send(JSON.stringify(data)); \n      setTimeout(this.getData, 250);\n      this.resetForm();\n    },\n    resetForm(){\n      this.todoToChange = [];\n      this.isChangingTodo = false; \n    }\n  },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"],"sourceRoot":"src"}]}